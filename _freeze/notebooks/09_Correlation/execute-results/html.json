{
  "hash": "520e22af18600a3bb9c2e57bbf1017d0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Correlation\nauthor: Alex Koiter\nhtml-table-processing: none\n---\n\n\n\n\n\n  \n## Load Libraries\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(patchwork)\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Read in data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nconc <- read_csv(here::here(\"./notebooks/P_concentration.csv\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 1141 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): sample_type, timing, plot, location, treatment\ndbl (3): site, ak_content, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmass_data <- read_csv(here::here(\"./notebooks/mass.csv\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 576 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): sample_type, timing, plot, location, treatment\ndbl (3): site, dryweight, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Merge data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nveg_data <- mass_data %>%\n  right_join(conc) %>%\n  rename(conc = ak_content) %>% # mg/kg\n  mutate(p_total = conc * dryweight/1000 /0.25) %>% # mg/m2\n  filter(timing == \"Before\",\n         sample_type != \"Soil\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nJoining with `by = join_by(sample_type, site, timing, plot, location, year,\ntreatment)`\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsoil_data <- conc %>%\n  filter(timing == \"Before\",\n         sample_type == \"Soil\") %>%\n  rename(soil_conc = ak_content) %>%\n  select(site, timing, plot,  location, year, treatment, soil_conc) \n\n## Join\ncorr_data <- soil_data %>%\n  right_join(veg_data) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nJoining with `by = join_by(site, timing, plot, location, year, treatment)`\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncorr_data %>%\n  group_by(sample_type) %>%\n  summarise(corr = cor(conc, soil_conc, use = \"complete.obs\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  sample_type     corr\n  <chr>          <dbl>\n1 Biomass      0.00817\n2 Litter      -0.0687 \n3 Organic      0.404  \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncor.test(~ conc + soil_conc, data = filter(corr_data, sample_type == \"Biomass\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  conc and soil_conc\nt = 0.096713, df = 140, p-value = 0.9231\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1567649  0.1726682\nsample estimates:\n        cor \n0.008173451 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncor.test(~ conc + soil_conc, data = filter(corr_data, sample_type == \"Litter\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  conc and soil_conc\nt = -0.78824, df = 131, p-value = 0.432\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2361709  0.1027219\nsample estimates:\n        cor \n-0.06870628 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncor.test(~ conc + soil_conc, data = filter(corr_data, sample_type == \"Organic\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  conc and soil_conc\nt = 5.2636, df = 142, p-value = 5.108e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.2574957 0.5324382\nsample estimates:\n      cor \n0.4040529 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncor.test(~ dryweight + soil_conc, data = filter(corr_data, sample_type == \"Biomass\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  dryweight and soil_conc\nt = -1.392, df = 142, p-value = 0.1661\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.27439578  0.04846811\nsample estimates:\n       cor \n-0.1160277 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncor.test(~ dryweight + soil_conc, data = filter(corr_data, sample_type == \"Litter\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  dryweight and soil_conc\nt = 0.11047, df = 131, p-value = 0.9122\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1608399  0.1795829\nsample estimates:\n        cor \n0.009651147 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nfilter(corr_data, soil_conc >4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 11\n   site timing plot  location  year treatment  soil_conc sample_type dryweight\n  <dbl> <chr>  <chr> <chr>    <dbl> <chr>          <dbl> <chr>           <dbl>\n1     1 Before a     Upper     2020 High Graze      4.86 Biomass          75.3\n2     1 Before a     Upper     2020 High Graze      4.86 Litter           47.3\n3     1 Before a     Upper     2020 High Graze      4.86 Organic          NA  \n# ℹ 2 more variables: conc <dbl>, p_total <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np1 <- ggplot(data = filter(corr_data, sample_type == \"Biomass\"), aes(x = soil_conc, y = conc, colour = location,)) +\n  geom_point() +\n  theme_bw(base_size = 12) +\n  labs(colour = \"Topograhic Position\", y = expression(paste(\"Biomass WEP Concentration (\", mg~kg^{-1}, \")\")), x = bquote('Ah (0-10cm) WEP Concentration ('*mg~kg^{-1}*')')) +\n  scale_y_continuous(limits = c(0,300), breaks = seq(0,300,50), expand = c(0,0)) +\n  scale_x_continuous(limits = c(0,5.5), expand = c(0,0)) +\n  scale_colour_manual(values = c(\"#35608DFF\", \"#2FB47CFF\", \"#FDE725FF\")) +\n  facet_wrap(~sample_type, scales = \"free\")\n\np2 <- ggplot(data = filter(corr_data, sample_type == \"Litter\"), aes(x = soil_conc, y = conc, colour = location,)) +\n  geom_point() +\n  theme_bw(base_size = 12) +\n  labs(colour = \"Topograhic Position\", y = expression(paste(\"Litter WEP Concentration (\", mg~kg^{-1}, \")\")), x = bquote('Ah (0-10cm) WEP Concentration ('*mg~kg^{-1}*')')) +\n  scale_y_continuous(limits = c(0,150), breaks = seq(0,150,25), expand = c(0,0)) +\n  scale_x_continuous(limits = c(0,5.5), expand = c(0,0)) +\n  scale_colour_manual(values = c(\"#35608DFF\", \"#2FB47CFF\", \"#FDE725FF\")) +\n  facet_wrap(~sample_type, scales = \"free\")\n\np3 <- ggplot(data = filter(corr_data, sample_type == \"Organic\"), aes(x = soil_conc, y = conc, colour = location,)) +\n  geom_point() +\n  theme_bw(base_size = 12) +\n  labs(colour = \"Topograhic Position\", y = expression(paste(\"Organic WEP Concentration (\", mg~kg^{-1}, \")\")), x = bquote('Ah (0-10cm) WEP Concentration ('*mg~kg^{-1}*')')) +\n  scale_y_continuous(limits = c(0,20), breaks = seq(0,20,5), expand = c(0,0)) +\n  scale_x_continuous(limits = c(0,5.5), expand = c(0,0)) +\n  scale_colour_manual(values = c(\"#35608DFF\", \"#2FB47CFF\", \"#FDE725FF\")) +\n  facet_wrap(~sample_type, scales = \"free\")\n\n#p1 + p2 + p3 + plot_layout(axis_titles = \"collect\", guides = 'collect') & theme(legend.position = \"top\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np4 <- ggplot(data = filter(corr_data, sample_type == \"Biomass\"), aes(x = soil_conc, y = dryweight, colour = location,)) +\n  geom_point() +\n  theme_bw(base_size = 12) +\n  labs(colour = \"Topograhic Position\", y = expression(paste(\"Biomass WEP Concentration (\", mg~kg^{-1}, \")\")), x = bquote('Ah (0-10cm) WEP Concentration ('*mg~kg^{-1}*')')) +\n  scale_y_continuous(limits = c(0,250), breaks = seq(0,250,50), expand = c(0,0)) +\n  scale_x_continuous(limits = c(0,5.5), expand = c(0,0)) +\n  scale_colour_manual(values = c(\"#35608DFF\", \"#2FB47CFF\", \"#FDE725FF\")) +\n  facet_wrap(~sample_type, scales = \"free\")\n\np5 <- ggplot(data = filter(corr_data, sample_type == \"Litter\"), aes(x = soil_conc, y = dryweight, colour = location,)) +\n  geom_point() +\n  theme_bw(base_size = 12) +\n  labs(colour = \"Topograhic Position\", y = expression(paste(\"Litter WEP Concentration (\", mg~kg^{-1}, \")\")), x = bquote('Ah (0-10cm) WEP Concentration ('*mg~kg^{-1}*')')) +\n  scale_y_continuous(limits = c(0,350), breaks = seq(0,350,100), expand = c(0,0)) +\n  scale_x_continuous(limits = c(0,5.5), expand = c(0,0)) +\n  scale_colour_manual(values = c(\"#35608DFF\", \"#2FB47CFF\", \"#FDE725FF\")) +\n  facet_wrap(~sample_type, scales = \"free\")\n\np6 <- p4 + p5 + plot_layout(axis_titles = \"collect\", guides = 'collect') & theme(legend.position = \"top\")\n#p6\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nveg_data2 <- mass_data %>%\n  right_join(conc) %>%\n  rename(conc = ak_content) %>% # mg/kg\n  mutate(p_total = conc * dryweight/1000 /0.25) %>% # mg/m2\n  filter(timing == \"Before\") %>%\n  group_by(year, treatment, location, sample_type) %>%\n  summarise(mean_total = mean(p_total, na.rm = T),\n            sd_total = sd(p_total, na.rm = T),\n            mean_conc = mean(conc, na.rm = T),\n            sd_conc = sd(conc, na.rm = T)) %>%\n  ungroup() %>%\n  mutate(treatment = fct_recode(treatment, \"Graze\" = \"Regular Graze\")) %>%\n  mutate(treatment = fct_relevel(treatment, \"Control\", \"Graze\", \"High Graze\", \"Mow\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nJoining with `by = join_by(sample_type, site, timing, plot, location, year,\ntreatment)`\n`summarise()` has grouped output by 'year', 'treatment', 'location'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nyear_plot <- ggplot(data = veg_data2, aes(y = mean_conc, x = year, colour = treatment)) +\n  geom_point(position=position_dodge(width = 0.2)) +\n  geom_line(position=position_dodge(width = 0.2)) +\n  geom_errorbar(aes(ymin = mean_conc - sd_conc, ymax = mean_conc + sd_conc), width = 0.1, position=position_dodge(width = 0.2)) +\n  theme_bw(base_size = 12) +\n  scale_x_continuous(breaks = c(2019, 2020, 2021)) +\n  labs(x = \"Year\", y = bquote('WEP Concentration ('*mg~kg^{-1}*')')) + \n  scale_colour_manual(values = c(\"#440154\", \"#3b528b\", \"#21918c\", \"#5ec962\")) +\n  theme(legend.title = element_blank(),\n        legend.position = \"bottom\") +\n  facet_grid(sample_type~location, scales = \"free_y\")\nyear_plot\n```\n\n::: {.cell-output-display}\n![](09_Correlation_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n#ggsave(plot = year_plot, filename = \"P_conc_year.png\", width = 174+50, height = 100+50, units = \"mm\", dpi = 600) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np_data3 <- mass_data %>%\n  right_join(conc) %>%\n  rename(conc = ak_content) %>% # mg/kg\n  mutate(p_total = conc * dryweight/1000 /0.25) %>% # mg/m2\n  filter(timing == \"Before\") %>%\n  select(-p_total, - dryweight) %>%\n  pivot_wider(names_from = sample_type, values_from = conc) %>%\n  mutate(year = factor(year)) %>%\n  rename(\"Location\" = \"location\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nJoining with `by = join_by(sample_type, site, timing, plot, location, year,\ntreatment)`\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npair_plot <- ggpairs(select(p_data3, Biomass, Litter, Organic, Soil, Location), aes(colour = Location)) +\n  scale_colour_manual(values = c(\"#440154\", \"#35608DFF\", \"#2FB47CFF\")) +\n  scale_fill_manual(values = c(\"#440154\", \"#35608DFF\", \"#2FB47CFF\")) +\n  labs(x = bquote('WEP Concentration ('*mg~kg^{-1}*')            '), y = bquote('WEP Concentration ('*mg~kg^{-1}*')            ')) +\n  theme_bw(base_size = 12)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in ggally_statistic(data = data, mapping = mapping, na.rm = na.rm, :\nRemoved 13 rows containing missing values\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in ggally_statistic(data = data, mapping = mapping, na.rm = na.rm, :\nRemoved 2 rows containing missing values\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in ggally_statistic(data = data, mapping = mapping, na.rm = na.rm, :\nRemoved 11 rows containing missing values\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in ggally_statistic(data = data, mapping = mapping, na.rm = na.rm, :\nRemoved 2 rows containing missing values\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in ggally_statistic(data = data, mapping = mapping, na.rm = na.rm, :\nRemoved 11 rows containing missing values\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npair_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 13 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 11 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 11 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 11 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 11 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 11 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](09_Correlation_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n#ggsave(plot = pair_plot, filename = \"pair_plot.png\", width = 250, height = 250, units = \"mm\", dpi = 600) \n```\n:::\n",
    "supporting": [
      "09_Correlation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}